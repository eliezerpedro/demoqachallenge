{
	"info": {
		"_postman_id": "c688aa87-9a40-4298-a812-6956362087e1",
		"name": "Desafio API Livros",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8636177"
	},
	"item": [
		{
			"name": "Criar Usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"pm.environment.set(\"userID\", response.userID);",
							"pm.environment.set(\"password\", \"Test@123\");",
							"console.log(\"Usuário criado com ID:\", response.userID);",
							"",
							"pm.test(\"Usuário criado\", function () {",
							"    pm.response.to.have.status(201);",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Gerar um nome de usuário único\r",
							"const uniqueUserName = `user_${Math.floor(Math.random() * 100000)}`;\r",
							"pm.environment.set(\"userName\", uniqueUserName);\r",
							"pm.environment.set(\"password\", \"Test@123\");\r",
							"\r",
							"// Atualizar o corpo da requisição dinamicamente\r",
							"pm.request.body.raw = JSON.stringify({\r",
							"    userName: uniqueUserName,\r",
							"    password: \"Test@123\"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userName\": \"test_user\", \"password\": \"Test@123\"}"
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/User",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User"
					]
				}
			},
			"response": []
		},
		{
			"name": "Gerar Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"pm.environment.set(\"token\", response.token);",
							"console.log(\"Token gerado:\", response.token);",
							"",
							"pm.test(\"Token Gerado\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userName\": \"{{userName}}\", \"password\": \"{{password}}\"}"
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/GenerateToken",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"GenerateToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmar Autorização",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Usuário autorizado\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userName\": \"{{userName}}\", \"password\": \"{{password}}\"}"
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/Authorized",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"Authorized"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar Livros",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"const books = response.books;",
							"pm.environment.set(\"isbn1\", books[0].isbn);",
							"pm.environment.set(\"isbn2\", books[1].isbn);",
							"console.log(\"Livros disponíveis:\", books.map(book => book.title).join(\", \"));",
							"",
							"pm.test(\"Livros listados\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alugar Livros",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Livros alugados com sucesso\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userId\": \"{{userID}}\", \"collectionOfIsbns\": [{\"isbn\": \"{{isbn1}}\"}, {\"isbn\": \"{{isbn2}}\"}]}"
				},
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Detalhes do Usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"pm.test(\"Usuário contém os livros reservados\", function () {",
							"    pm.expect(response.books.length).to.eql(2);",
							"});",
							"console.log(\"Detalhes do usuário:\", response);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/User/{{userID}}",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	]
}